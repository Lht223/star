{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","url","AudioClip","setJumpAction","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","setInputControl","self","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","keyCode","KEY","a","accLeft","accRight","d","onKeyReleased","node","onLoad","jumpAction","runAction","xSpeed","update","dt","Math","abs","x"],"mappings":"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","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        jumpHeight: 0,\r\n        jumpDuration: 0,\r\n        maxMoveSpeed: 0,\r\n        accel: 0,\r\n        jumpAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },\r\n    },\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        setJumpAction: function () {\r\n            var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n            var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n            var callback = cc.callFunc(this.playJumpSound, this);\r\n            return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n        },\r\n    \r\n        playJumpSound: function () {\r\n            cc.audioEngine.playEffect(this.jumpAudio, false);\r\n        },\r\n    \r\n        setInputControl: function () {\r\n            var self = this;\r\n            cc.eventManager.addListener({\r\n                event: cc.EventListener.KEYBOARD,\r\n                onKeyPressed: function(keyCode, event) {\r\n                    switch(keyCode) {\r\n                        case cc.KEY.a:\r\n                            self.accLeft = true;\r\n                            self.accRight = false;\r\n                            break;\r\n                        case cc.KEY.d:\r\n                            self.accLeft = false;\r\n                            self.accRight = true;\r\n                            break;\r\n                    }\r\n                },\r\n                onKeyReleased: function(keyCode, event) {\r\n                    switch(keyCode) {\r\n                        case cc.KEY.a:\r\n                            self.accLeft = false;\r\n                            break;\r\n                        case cc.KEY.d:\r\n                            self.accRight = false;\r\n                            break;\r\n                    }\r\n                }\r\n            }, self.node);\r\n        },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        this.xSpeed = 0;\r\n\r\n        this.setInputControl();\r\n    },\r\n\r\n    update: function (dt) {\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        this.node.x += this.xSpeed * dt;\r\n    },\r\n});\r\n"]}